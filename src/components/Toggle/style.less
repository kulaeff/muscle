@import (reference) '../../styles/variables';

@sDefault: 1.6rem;

.toggle {
    cursor: pointer;
    display: table;
    position: relative;
    user-select: none;
    width: 100%;
    &__control {
        display: table-cell;
        vertical-align: middle;
        width: calc(@sDefault * 2 ~'-' @btToggle * 2);
        &-knob {
            background-color: @cToggleHandleBackground;
            height: calc(@sDefault ~'-' @btToggle * 2);
            left: 0;
            position: absolute;
            top: 0;
            transition: transform @dDefault ease-out;
            width: calc(@sDefault ~'-' @btToggle * 2);
        }
        &-rectangle {
            background-color: @cToggleBackground;
            border: @btToggle solid @cToggleBorder;
            border-radius: 0;
            box-sizing: border-box;
            height: @sDefault;
            position: relative;
            transition: background-color @dDefault linear, border-color @dDefault linear;
            width: calc(@sDefault * 2 ~'-' @btToggle * 2);
        }
    }
    &__label {
        display: table-cell;
        vertical-align: middle;
    }
    // PSEUDO
    &:hover &__control-rectangle {
        background-color: @cToggleHandleBackgroundHover;
    }
    &:hover &__control-rectangle {
        background-color: @cToggleBackgroundHover;
        border-color: @cToggleBorderHover;
    }
    // STATES
    &_state_checked &__control-knob {
        background-color: @cToggleHandleBackgroundChecked;
        transform: translate(100%, 0);
    }
    &_state_checked &__control-rectangle {
        background-color: @cToggleBackgroundChecked;
        border-color: @cToggleBorderChecked;
    }
    &_state_checked:hover &__control-knob {
        background-color: @cToggleHandleBackgroundChecked;
        transform: translate(100%, 0);
    }
    &_state_checked:hover &__control-rectangle {
        background-color: @cToggleBackgroundChecked;
        border-color: @cToggleBorderChecked;
    }
}
